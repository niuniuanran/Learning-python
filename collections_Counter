'''
Counter is basically a dictionary that records the number of times an item appears in an iterable.
'''
'''
>>> a = [1,2,3,6,23, 1,3]
>>> from collections import Counter
>>> Counter(a)
Counter({1: 2, 3: 2, 2: 1, 6: 1, 23: 1})
'''
'''
It is very useful when deciding if an iterable contains the wanted items as it is faster than list methods in terms of searching and comparing.
'''

class Solution(object):

    def findAnagrams(self, s, p):
        from collections import Counter, defaultdict
        """
        :type s: str
        :type p: str
        :rtype: List[int]
        """
        ans = []
        tar = Counter(p)
        ls = len(s)
        lp = len(p)

        counter = defaultdict(int)
        start = 0

        for i in range(ls):
            if s[i] not in tar:
                start = i + 1
                counter = defaultdict(int)

            else:
                counter[s[i]] += 1

            if i - start + 1 == lp:
                if counter == tar:
                    ans.append(start)
                counter[s[start]] -= 1
                start += 1


        return ans
                
                
                

 


